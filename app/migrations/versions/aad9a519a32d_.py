"""empty message

Revision ID: aad9a519a32d
Revises: 
Create Date: 2025-02-23 12:05:13.859141

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'aad9a519a32d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.add_column(sa.Column('fk_students_user_id', sa.Integer(), nullable=True))  # Make it nullable first
        batch_op.create_foreign_key('fk_students_user_id', 'users', ['fk_students_user_id'], ['id'])

    # If needed, add logic to update existing students with a valid user_id before setting NOT NULL
    op.execute("""
        UPDATE students
        SET fk_students_user_id = (SELECT id FROM users WHERE users.id = students.id LIMIT 1)
        WHERE fk_students_user_id IS NULL
    """)

    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.alter_column('fk_students_user_id', nullable=False)  # Now enforce NOT NULL after assigning values

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('student_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key('fk_users_student_id', 'students', ['student_id'], ['id'])

    # ### end Alembic commands ###



def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint('fk_users_student_id', type_='foreignkey')
        batch_op.drop_column('student_id')

    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.drop_constraint('fk_students_user_id', type_='foreignkey')  # Updated with correct constraint name
        batch_op.drop_column('fk_students_user_id')

    # ### end Alembic commands ###
