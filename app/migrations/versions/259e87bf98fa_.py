"""empty message

# Revision ID: 259e87bf98fa
# Revises: 62bfeb6103ab
# Create Date: 2025-02-28 10:25:24.971737

"""
# from alembic import op
# import sqlalchemy as sa


# # revision identifiers, used by Alembic.
# revision = '259e87bf98fa'
# down_revision = '62bfeb6103ab'
# branch_labels = None
# depends_on = None


# def upgrade():
#     # ### commands auto generated by Alembic - please adjust! ###
#     with op.batch_alter_table('assessments', schema=None) as batch_op:
#         batch_op.drop_constraint(None, type_='foreignkey')
#         batch_op.drop_column('class_id')

#     # ### end Alembic commands ###


# def downgrade():
#     # ### commands auto generated by Alembic - please adjust! ###
#     with op.batch_alter_table('assessments', schema=None) as batch_op:
#         batch_op.add_column(sa.Column('class_id', sa.INTEGER(), nullable=False))
#         batch_op.create_foreign_key(None, 'classes', ['class_id'], ['id'])

#     # ### end Alembic commands ###


from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '259e87bf98fa'
down_revision = '62bfeb6103ab'
branch_labels = None
depends_on = None


def upgrade():
    with op.batch_alter_table('assessments', schema=None) as batch_op:
        batch_op.drop_column('class_id')  # Dropping the column removes the foreign key automatically


def downgrade():
    with op.batch_alter_table('assessments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('class_id', sa.Integer(), nullable=False))

        # Recreate the foreign key constraint explicitly
        batch_op.create_foreign_key(
            "fk_assessments_class_id",  # Explicitly naming the foreign key
            "classes",
            ["class_id"],
            ["id"]
        )
