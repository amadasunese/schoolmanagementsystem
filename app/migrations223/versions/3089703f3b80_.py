from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3089703f3b80'
down_revision = 'c3cd53780b58'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('sqlite_sequence')
    with op.batch_alter_table('assessment_types', schema=None) as batch_op:
        batch_op.drop_constraint('uq_assessment_per_school', type_='unique')

    with op.batch_alter_table('classes', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.create_unique_constraint('uq_class_per_school', ['class_name', 'school_id'])
        
        # Use the correct foreign key constraint name here
        batch_op.drop_constraint('fk_classes_school_id_123', type_='foreignkey')  # Updated constraint name
        batch_op.create_foreign_key('fk_classes_school_id', 'schools', ['school_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('classes', schema=None) as batch_op:
        batch_op.drop_constraint('fk_classes_school_id', type_='foreignkey')
        batch_op.create_foreign_key(None, 'schools', ['school_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_constraint('uq_class_per_school', type_='unique')
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('assessment_types', schema=None) as batch_op:
        batch_op.create_unique_constraint('uq_assessment_per_school', ['name', 'school_id'])

    op.create_table('sqlite_sequence',
    sa.Column('name', sa.NullType(), nullable=True),
    sa.Column('seq', sa.NullType(), nullable=True)
    )
    # ### end Alembic commands ###
